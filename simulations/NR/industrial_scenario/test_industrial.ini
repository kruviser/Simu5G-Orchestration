[General]
image-path=../../../images
cmdenv-express-mode = true
cmdenv-autoflush = true
network = simu5g.simulations.NR.industrial_scenario.industrial_network


##########################################################
#            Output Format Results                       #
##########################################################
num-rngs = 3
repeat = 1
seed-set = ${repetition}
result-dir = results
output-scalar-file = ${resultdir}/${configname}/${iterationvars}-${repetition}.sca
output-vector-file = ${resultdir}/${configname}/${iterationvars}-${repetition}.vec
**.routingRecorder.enabled = false
**.scalar-recording = true
**.ue*[*].app[*].**.vector-recording = true
**.vim.**.vector-recording = true
**.vector-recording = true
**.sctp.**.scalar-recording = false  # remove annoying statistics from SCTP
**.sctp.**.vector-recording = false  # remove annoying statistics from SCTP



##########################################################
#            Simulation parameters                       #
##########################################################
debug-on-errors = false
print-undisposed = true

sim-time-limit = 60s
warmup-period = 0s

*.playgroundSizeX = 1100m
*.playgroundSizeY = 800m
*.playgroundSizeZ = 50m


############### IPv4 configurator config #################
*.configurator.config = xmldoc("./demo.xml")

############### SCTP configuration ##################
**.sctp.nagleEnabled = false         # if true, transmission of small packets will be delayed on the X2
**.sctp.enableHeartbeats = false

##########################################################
#              NR specific parameters                   #
##########################################################
*.gNodeB*.cellInfo.broadcastMessageInterval = 0.5s
**.fbPeriod = 40   # reports CQI every 40ms
**.amcType = "NRAmc"
**.pilotMode = "ROBUST_CQI" 
**.targetBler = 0.01
**.blerShift = 5  

**.downlink_interference = true
**.uplink_interference = true
**.ueTxPower = 26
**.eNodeBTxPower = 46

#######################################################
#        CA and channel model configuration           # 
#######################################################
*.carrierAggregation.numComponentCarriers = 1
*.carrierAggregation.componentCarrier[0].numBands =  25 #${numBands=25}

*.*.cellularNic.LteChannelModelType = "NRChannelModel"
*.gNodeB1.cellularNic.numCarriers = 1
*.gNodeB1.cellularNic.channelModel[0].componentCarrierIndex = 0
*.ue[*].cellularNic.numCarriers = 1
*.ue[*].cellularNic.nrChannelModel[0].componentCarrierIndex = 0

**.cellularNic.numCarriers = 1
**.cellularNic.nrChannelModel[0].componentCarrierIndex = 0

*.ueExtremeEdge[*].cellularNic.numCarriers = 1
*.ueExtremeEdge[*].cellularNic.nrChannelModel[0].componentCarrierIndex = 0


##########################################################
#                      Mobility                          #			
##########################################################		
**.mobility.constraintAreaMinZ = 0m
**.mobility.constraintAreaMaxZ = 0m
**.mobility.constraintAreaMinX = 0m
**.mobility.constraintAreaMaxX = 1000m
**.mobility.constraintAreaMinY = 0m
**.mobility.constraintAreaMaxY = 1000m


*.ue[*].mobility.initFromDisplayString = true
*.ueExtremeEdge[*].mobility.initFromDisplayString = true

*.gNodeB1.mobility.initFromDisplayString = true

**.numUes = 1
#**.ue[0].mobility.initialX = ${uex = 180m}
#**.ue[0].mobility.initialY = ${uey = 180m}

#**.ueExtremeEdge[0].mobility.initialX = ${extremeX = 250m}
#**.ueExtremeEdge[0].mobility.initialY = ${extremeY = 250m}

#**.bgUe_0.mobility.initialX = uniform(100m, 250m)
#**.bgUe_0.mobility.initialY = uniform(100m, 250m)

**.ue[*].masterId = 1    
**.ue[*].macCellId = 1   
**.ue[*].nrMasterId = 1
**.ue[*].nrMacCellId = 1

**.masterId = 1    
**.macCellId = 1   
**.nrMasterId = 1  
**.nrMacCellId = 1 

**.ueExtremeEdge[*].masterId = 1    
**.ueExtremeEdge[*].macCellId = 1   
**.ueExtremeEdge[*].nrMasterId = 1
**.ueExtremeEdge[*].nrMacCellId = 1


**.gNodeB1.macCellId = 1
**.gNodeB1.macNodeId = 1

# tcp settings
**.tcp.typename = "Tcp"
**.tcp.advertisedWindow = 65535         # in bytes, corresponds with the maximal receiver buffer capacity (Note: normally, NIC queues should be at least this size)
**.tcp.tcpAlgorithmClass = "TcpReno"    # TcpReno/TcpTahoe/TcpNewReno/TcpNoCongestionControl/DumbTcp
**.tcp.sackSupport = true               # Selective Acknowledgment (RFC 2018, 2883, 3517) support (header option) (SACK will be enabled for a connection if both endpoints support it)


##########################################################
#                _MEC Host Side_		                 #
##########################################################
# resources available
*.mecHost*.maxMECApps = 100		#max ME Apps to instantiate
*.mecHost*.maxRam = 32GB		#max KBytes of Ram Space 
*.mecHost*.maxDisk = 100TB		#max KBytes of Ram Space 
*.mecHost*.maxCpuSpeed = 8000000	#max CPU speed in MIPs -> ~20 i9 CPUs
# MIPs example
# Intel Core i9-9900K (8-core) 					412,090 MIPS at 4.7 GHz
# Raspberry Pi 2 (quad-core ARM Cortex A7) 		4,744 MIPS at 1.0 GHz

#----------------------------------------
*.mecHost*.vim.scheduling = "fair"
*.mecHost*.eNBList = "gNodeB1"

*.MECnode.vim.scheduling = "fair"
*.MECnode.eNBList = "gNodeB1"    

*.ControlRoom.vim.scheduling = "fair"
*.ControlRoom.eNBList = "gNodeB1"

    
*.mecHost*.mecPlatformManager.mecOrchestrator = "mecOrchestrator"
**.mecPlatformManager.mecOrchestrator = "mecOrchestrator"
**.mecOrchestrator.mecHostList = "MECnode,ControlRoom" # used for the foreground mec apps

**.bgMecAppManager.mecHostList = "MECnode" # used for the background mec apps

# parameters to visualize the bg UEs near the foreground one
**.bgMecAppManager.centerX = 140m#${uex}
**.bgMecAppManager.centerY = 250m#${uey}
**.bgMecAppManager.radius = 100m

**.bgMecAppManager.defaultRam = 100MB
**.bgMecAppManager.defaultDisk = 100MB
**.bgMecAppManager.defaultCpu = 1

**.bgMecAppManager.maxBgMecApps = 99
**.bgMecAppManager.minBgMecApps = 1
##########################################################



##########################################################
#                    App Layer                           #
##########################################################
*.PA.numApps = 1

*.localDTnode.numApps = 2

**.ControlRoom.numIndependentMecApp = 0
**.ControlRoom.*.numIndependentMecApp = 0 
**.MECnode.numIndependentMecApp = 1
**.MECnode.*.numIndependentMecApp = 1



*.mecHost*.independentMecApp[*].enableVimComputing = true
**.independentMecApp[*].enableVimComputing = true

*.PA.app[0].typename = "CbrRequester" 
*.PA.app[0].PacketSize = 80 
*.PA.app[0].sampling_time = 0.2s 
*.PA.app[0].localPort = 3000
*.PA.app[0].destAddress = "localDTnode"
*.PA.app[0].destPort = 3000   
*.PA.app[0].startTime = 0.05s

*.localDTnode.app[0].typename = "CbrResponder"   
*.localDTnode.app[0].PacketSize = 50 
*.localDTnode.app[0].destAddress = "PA" # obtain the address of the client by reading its index in the array of Apps 
*.localDTnode.app[0].destPort = 3000  
*.localDTnode.app[0].localPort = 3000 
*.localDTnode.app[0].serviceComplexity = 0.1 # expressed in MIPs


*.localDTnode.app[1].typename = "CbrRequester" 
*.localDTnode.app[1].PacketSize = 80 
*.localDTnode.app[1].sampling_time = 0.2s 
*.localDTnode.app[1].localPort = 4000
*.localDTnode.app[1].destAddress = "MECnode.virtualisationInfrastructure"
*.localDTnode.app[1].destPort = 4000   
*.localDTnode.app[1].startTime = 0.05s

*.MECnode.independentMecApp[0].typename = "CbrResponder"   
*.MECnode.independentMecApp[0].PacketSize = 50 
*.MECnode.independentMecApp[0].destAddress = "localDTnode" # obtain the address of the client by reading its index in the array of Apps 
*.MECnode.independentMecApp[0].destPort = 4000  
*.MECnode.independentMecApp[0].localPort = 4000  
*.MECnode.independentMecApp[0].serviceComplexity = 0.1 # expressed in MIPs

*.enableLocalComputation = false 	
##########################################################





# ----------------------------------------------------------------------------- #
# Config without the trace file. Every delta time a mec app is instantiated
#
[Config Deltatime]
**.bgMecAppManager.fromTraceFile = false
**.bgMecAppManager.deltaTime = 1s
**.bgMecAppManager.admissionControl = false

# ----------------------------------------------------------------------------- #
# Config the trace file, but no real timestamps. The period is chosen via snapshotperiod
#
[Config Tracefile_period]
**.bgMecAppManager.fromTraceFile = true
**.bgMecAppManager.traceFileName = "traceFile.txt"
**.bgMecAppManager.snapshotPeriod = 1
**.bgMecAppManager.admissionControl = false


# ----------------------------------------------------------------------------- #
# Config the trace file with real timestamps.
#
[Config Tracefile_realTimestamp]
**.bgMecAppManager.fromTraceFile = true
**.bgMecAppManager.traceFileName = "traceFile_timestamp_custom_3_original.txt"
**.bgMecAppManager.predictionFileName = "prediction_samples_custom_3_extended.txt"
**.bgMecAppManager.snapshotPeriod = -1
**.bgMecAppManager.admissionControl = false

**.bgMecAppManager.maxBgMecApps = 13
**.bgMecAppManager.minBgMecApps = 6 # used only for DUMMY_ORCHESTRATOR 
**.bgMecAppManager.orchestrationType = 1 # DUMMY_ORCHESTRATION = 0 , EXTERNAL_ORCHESTRATION = 1
**.bgMecAppManager.orchestrationPolicy = ${ policy ="oracle","conservative", "reactive","prediction"}

**.bgMecAppManager.enablePeriodicLoadBalancing = true
**.bgMecAppManager.balancingInterval = 1s # can be used as the timer for balancing AND orchestration

**.bgMecAppManager.mecHostActivation = 0.9s
**.bgMecAppManager.enableHostActivationDelay = true





[Config Extreme-Edge]
extends = Tracefile_realTimestamp
scheduler-class = "inet::RealTimeScheduler"
**.numExtremeEdgeResources = 1
*.ueExtremeEdge[*].numApps = 1

#**.bgMecAppManager.traceFileName = "traceFile_empty.txt"

*.ue[*].app[*].secondaryDestAddress = "ueExtremeEdge[0]"
*.ue[*].app[*].secondaryDestPort = 3000
*.ue[*].app[*].secondaryLocalPort = 4000    
*.ue[*].app[*].enableSecondaryResponder = true
*.ue[*].app[*].enableOrchestration = true

*.ueExtremeEdge[*].app[*].typename = "CbrResponder"   
*.ueExtremeEdge[*].app[*].PacketSize = 50 
*.ueExtremeEdge[*].app[*].destAddress = "ue[0]" 
*.ueExtremeEdge[*].app[*].destPort = 4000  
*.ueExtremeEdge[*].app[*].localPort = 3000
*.ueExtremeEdge[*].app[*].enableVimComputing = true
*.ueExtremeEdge[*].app[*].computingType = 1
*.ueExtremeEdge[*].app[*].extremeEdgeComputingTime = 50ms
*.ueExtremeEdge[*].app[*].enableOrchestration = true

[Config Extreme-Edge-finer]
extends = Extreme-Edge
**.bgMecAppManager.traceFileName = "traceFile_timestamp_custom.txt"


[Config real-time-execution]
extends = Tracefile_realTimestamp
scheduler-class = "inet::RealTimeScheduler"



