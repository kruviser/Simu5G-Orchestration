[General]
image-path=../../../images
cmdenv-express-mode = true
cmdenv-autoflush = true
network = simu5g.simulations.NR.industrial_scenario.industrial_network


##########################################################
#            Output Format Results                       #
##########################################################
num-rngs = 3
repeat = 1
seed-set = ${repetition}
result-dir = results
output-scalar-file = ${resultdir}-industrialDT/${configname}/${iterationvars}-${repetition}.sca
output-vector-file = ${resultdir}-industrialDT/${configname}/${iterationvars}-${repetition}.vec
**.routingRecorder.enabled = false
**.scalar-recording = true
**.ue*[*].app[*].**.vector-recording = true
**.vim.**.vector-recording = true
**.vector-recording = true
**.sctp.**.scalar-recording = false  # remove annoying statistics from SCTP
**.sctp.**.vector-recording = false  # remove annoying statistics from SCTP



##########################################################
#            Simulation parameters                       #
##########################################################
debug-on-errors = false
print-undisposed = true

sim-time-limit = 10s
warmup-period = 0s

*.playgroundSizeX = 1100m
*.playgroundSizeY = 800m
*.playgroundSizeZ = 50m


############### IPv4 configurator config #################
*.configurator.config = xmldoc("./demo.xml")

############### SCTP configuration ##################
**.sctp.nagleEnabled = false         # if true, transmission of small packets will be delayed on the X2
**.sctp.enableHeartbeats = false

##########################################################
#              NR specific parameters                   #
##########################################################
*.gNodeB*.cellInfo.broadcastMessageInterval = 0.5s
**.fbPeriod = 40   # reports CQI every 40ms
**.amcType = "NRAmc"
**.pilotMode = "ROBUST_CQI" 
**.targetBler = 0.01
**.blerShift = 5  

**.downlink_interference = true
**.uplink_interference = true
**.ueTxPower = 26
**.eNodeBTxPower = 46

#######################################################
#        CA and channel model configuration           # 
#######################################################
*.carrierAggregation.numComponentCarriers = 1
*.carrierAggregation.componentCarrier[0].numBands =  25 #${numBands=25}

*.*.cellularNic.LteChannelModelType = "NRChannelModel"
*.gNodeB1.cellularNic.numCarriers = 1
*.gNodeB1.cellularNic.channelModel[0].componentCarrierIndex = 0
*.ue[*].cellularNic.numCarriers = 1
*.ue[*].cellularNic.nrChannelModel[0].componentCarrierIndex = 0

**.cellularNic.numCarriers = 1
**.cellularNic.nrChannelModel[0].componentCarrierIndex = 0

*.ueExtremeEdge[*].cellularNic.numCarriers = 1
*.ueExtremeEdge[*].cellularNic.nrChannelModel[0].componentCarrierIndex = 0


##########################################################
#                      Mobility                          #			
##########################################################		
**.mobility.constraintAreaMinZ = 0m
**.mobility.constraintAreaMaxZ = 0m
**.mobility.constraintAreaMinX = 0m
**.mobility.constraintAreaMaxX = 1000m
**.mobility.constraintAreaMinY = 0m
**.mobility.constraintAreaMaxY = 1000m


*.gNodeB1.mobility.initFromDisplayString = true



**.masterId = 1    
**.macCellId = 1   
**.nrMasterId = 1  
**.nrMacCellId = 1 

**.gNodeB1.macCellId = 1
**.gNodeB1.macNodeId = 1

# tcp settings
**.tcp.typename = "Tcp"
**.tcp.advertisedWindow = 65535         # in bytes, corresponds with the maximal receiver buffer capacity (Note: normally, NIC queues should be at least this size)
**.tcp.tcpAlgorithmClass = "TcpReno"    # TcpReno/TcpTahoe/TcpNewReno/TcpNoCongestionControl/DumbTcp
**.tcp.sackSupport = true               # Selective Acknowledgment (RFC 2018, 2883, 3517) support (header option) (SACK will be enabled for a connection if both endpoints support it)


##########################################################
#                _MEC Host Side_		                 #
##########################################################
# resources available
*.MECnode*.maxMECApps = 100		#max ME Apps to instantiate
*.MECnode*.maxRam = 32GB		#max KBytes of Ram Space 
*.MECnode*.maxDisk = 100TB		#max KBytes of Ram Space 
*.MECnode*.maxCpuSpeed = 8000000	#max CPU speed in MIPs -> ~20 i9 CPUs
# MIPs example
# Intel Core i9-9900K (8-core) 					412,090 MIPS at 4.7 GHz
# Raspberry Pi 2 (quad-core ARM Cortex A7) 		4,744 MIPS at 1.0 GHz

#----------------------------------------
*.MECnode.vim.scheduling = "fair"
*.MECnode.eNBList = "gNodeB1"    

*.ControlRoom.vim.scheduling = "fair"
*.ControlRoom.eNBList = "gNodeB1"

**.mecPlatformManager.mecOrchestrator = "mecOrchestrator"
**.mecOrchestrator.mecHostList = "MECnode,ControlRoom" # used for the foreground mec apps

**.bgMecAppManager.mecHostList = "MECnode" # used for the background mec apps

# parameters to visualize the bg UEs near the foreground one
**.bgMecAppManager.centerX = 140m#${uex}
**.bgMecAppManager.centerY = 250m#${uey}
**.bgMecAppManager.radius = 100m

**.bgMecAppManager.defaultRam = 100MB
**.bgMecAppManager.defaultDisk = 100MB
**.bgMecAppManager.defaultCpu = 1

**.bgMecAppManager.maxBgMecApps = 99
**.bgMecAppManager.minBgMecApps = 1
##########################################################



##########################################################
#                    App Layer                           #
##########################################################
*.PA.numApps = 1

*.localDTnode.numApps = 2

**.ControlRoom.numIndependentMecApp = 1
**.ControlRoom.*.numIndependentMecApp = 1 
**.MECnode.numIndependentMecApp = 0
**.MECnode.*.numIndependentMecApp = 0

*.mecHost*.independentMecApp[*].enableVimComputing = true
**.independentMecApp[*].enableVimComputing = true

*.PA.app[0].typename = "CbrSender" 
*.PA.app[0].PacketSize = 80 
*.PA.app[0].sampling_time = 0.02s 
*.PA.app[0].localPort = 3000
*.PA.app[0].destAddress = "localDTnode"
*.PA.app[0].destPort = 3000   
*.PA.app[0].startTime = 0.05s

*.localDTnode.app[0].typename = "CbrReceiver"   
*.localDTnode.app[0].localPort = 3000 


*.ControlRoom.independentMecApp[0].typename = "CbrRequester" 
*.ControlRoom.independentMecApp[0].PacketSize = 80 
*.ControlRoom.independentMecApp[0].sampling_time = 0.2s 
*.ControlRoom.independentMecApp[0].localPort = 4000
*.ControlRoom.independentMecApp[0].destAddress = "localDTnode"
*.ControlRoom.independentMecApp[0].destPort = 4000   
*.ControlRoom.independentMecApp[0].startTime = 0.05s

*.localDTnode.app[1].typename = "DigitalTwinApp" 
*.localDTnode.app[1].monitoringDT = "app"
*.localDTnode.app[1].monitoringDTindex = 0
*.localDTnode.app[1].PacketSize = 80 
*.localDTnode.app[1].sampling_time = 0.2s 
*.localDTnode.app[1].localPort = 4000
*.localDTnode.app[1].destAddress = "ControlRoom.virtualisationInfrastructure"
*.localDTnode.app[1].destPort = 4000   
*.localDTnode.app[1].startTime = 0.05s

*.enableLocalComputation = false 	
##########################################################





# ----------------------------------------------------------------------------- #
# Config without the trace file. Every delta time a mec app is instantiated
#
[Config localDT]
**.bgMecAppManager.fromTraceFile = false
**.bgMecAppManager.deltaTime = 1s
**.bgMecAppManager.admissionControl = false

[Config edgeDT]
extends = localDT

*.PA.numApps = 2

**.MECnode.numIndependentMecApp = 2
**.MECnode.*.numIndependentMecApp = 2

**.ControlRoom.numIndependentMecApp = 2
**.ControlRoom.*.numIndependentMecApp = 2 


*.PA.app[1].typename = "CbrSender" 
*.PA.app[1].PacketSize = 80 
*.PA.app[1].sampling_time = 0.02s 
*.PA.app[1].localPort = 3001
*.PA.app[1].destAddress = "MECnode.virtualisationInfrastructure"
*.PA.app[1].destPort = 3001   
*.PA.app[1].startTime = 0.05s

*.MECnode.independentMecApp[0].typename = "CbrReceiver"   
*.MECnode.independentMecApp[0].localPort = 3001 

*.ControlRoom.independentMecApp[1].typename = "CbrRequester" 
*.ControlRoom.independentMecApp[1].PacketSize = 80 
*.ControlRoom.independentMecApp[1].sampling_time = 0.2s 
*.ControlRoom.independentMecApp[1].localPort = 4001
*.ControlRoom.independentMecApp[1].destAddress = "MECnode.virtualisationInfrastructure"
*.ControlRoom.independentMecApp[1].destPort = 4001   
*.ControlRoom.independentMecApp[1].startTime = 0.05s

*.MECnode.independentMecApp[1].typename = "DigitalTwinApp" 
*.MECnode.independentMecApp[1].monitoringDT = "independentMecApp"
*.MECnode.independentMecApp[1].monitoringDTindex = 0
*.MECnode.independentMecApp[1].PacketSize = 80 
*.MECnode.independentMecApp[1].sampling_time = 0.2s 
*.MECnode.independentMecApp[1].localPort = 4001
*.MECnode.independentMecApp[1].destAddress = "ControlRoom.virtualisationInfrastructure"
*.MECnode.independentMecApp[1].destPort = 4001   
*.MECnode.independentMecApp[1].startTime = 0.05s


[Config CloudDT]
extends = edgeDT

*.PA.numApps = 3

**.ControlRoom.numIndependentMecApp = 3
**.ControlRoom.*.numIndependentMecApp = 3

**.CloudServer.numApps = 2 

*.PA.app[2].typename = "CbrSender" 
*.PA.app[2].PacketSize = 80 
*.PA.app[2].sampling_time = 0.02s 
*.PA.app[2].localPort = 3002
*.PA.app[2].destAddress = "CloudServer"
*.PA.app[2].destPort = 3002   
*.PA.app[2].startTime = 0.05s

*.CloudServer.app[0].typename = "CbrReceiver"   
*.CloudServer.app[0].localPort = 3002 

*.ControlRoom.independentMecApp[2].typename = "CbrRequester" 
*.ControlRoom.independentMecApp[2].PacketSize = 80 
*.ControlRoom.independentMecApp[2].sampling_time = 0.2s 
*.ControlRoom.independentMecApp[2].localPort = 4002
*.ControlRoom.independentMecApp[2].destAddress = "CloudServer"
*.ControlRoom.independentMecApp[2].destPort = 4002   
*.ControlRoom.independentMecApp[2].startTime = 0.05s

*.CloudServer.app[1].typename = "DigitalTwinApp" 
*.CloudServer.app[1].monitoringDT = "app"
*.CloudServer.app[1].monitoringDTindex = 0
*.CloudServer.app[1].PacketSize = 80 
*.CloudServer.app[1].sampling_time = 0.2s 
*.CloudServer.app[1].localPort = 4002
*.CloudServer.app[1].destAddress = "ControlRoom.virtualisationInfrastructure"
*.CloudServer.app[1].destPort = 4002   
*.CloudServer.app[1].startTime = 0.05s
