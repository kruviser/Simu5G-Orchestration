[General]
image-path=../../../images
output-scalar-file-append = false
**.routingRecorder.enabled = false

network = simu5g.simulations.NR.mec.trafficlight.TrafficlightNetwork
warmup-period = 5s
sim-time-limit= 50s
repeat = 3


############### Statistics ##################
output-scalar-file = ${resultdir}/${configname}/${iterationvars}-${repetition}.sca
output-vector-file = ${resultdir}/${configname}/${iterationvars}-${repetition}.vec
seed-set = ${repetition}
**.sctp.**.scalar-recording = false  # remove annoying statistics from SCTP
**.sctp.**.vector-recording = false  # remove annoying statistics from SCTP
**.averageCqiDl:vector.vector-recording = false

**.vector-recording = false



############### SCTP configuration ##################
**.sctp.nagleEnabled = false         # if true, transmission of small packets will be delayed on the X2
**.sctp.enableHeartbeats = false

############### General PHY parameters ##############
**.downlink_interference = true
**.uplink_interference = true
**.ueTxPower = 26
**.eNodeBTxPower = 46
**.targetBler = 0.01
**.blerShift = 5  
**.fbPeriod = 40   # reports CQI every 40ms

############### IPv4 configurator config #################
*.configurator.config = xmldoc("./demo.xml")


############# Floorplan parameters ################
**.carA[*].mobility.constraintAreaMinX = 300m
**.carA[*].mobility.constraintAreaMaxX = 900m
**.carA[*].mobility.constraintAreaMinY = 80m
**.carA[*].mobility.constraintAreaMaxY = 90m

**.carB[*].mobility.constraintAreaMinX = 795m
**.carB[*].mobility.constraintAreaMaxX = 805m
**.carB[*].mobility.constraintAreaMinY = 0m
**.carB[*].mobility.constraintAreaMaxY = 700m

**.carC[*].mobility.constraintAreaMinX = 300m
**.carC[*].mobility.constraintAreaMaxX = 900m
**.carC[*].mobility.constraintAreaMinY = 680m
**.carC[*].mobility.constraintAreaMaxY = 690m

**.carD[*].mobility.constraintAreaMinX = 350m
**.carD[*].mobility.constraintAreaMaxX = 360m 
**.carD[*].mobility.constraintAreaMinY = 0m   
**.carD[*].mobility.constraintAreaMaxY = 700m 

**.car*[*].mobility.constraintAreaMinZ = 0m
**.car*[*].mobility.constraintAreaMaxZ = 0m
**.car*[*].mobility.initFromDisplayString = false

**.trLight*.mobility.initFromDisplayString = true
**.sumo*.mobility.initFromDisplayString = true
**.mobility.initFromDisplayString = true
#------------------------------------#

############ UEs position #################
**.car*[*].mobility.typename = "LinearMobility"
**.car*[*].mobility.speed = uniform(10mps,20mps) #36kmh-72kmh


**.carA[*].mobility.initialX = uniform(300m,900m)
**.carA[*].mobility.initialY = uniform(80m,90m)

**.carB[*].mobility.initialX = uniform(795m,805m)
**.carB[*].mobility.initialY = uniform(0m,700m)

**.carC[*].mobility.initialX = uniform(300m,900m)
**.carC[*].mobility.initialY = uniform(680m,690m)

**.carD[*].mobility.initialX = uniform(350m,360m)
**.carD[*].mobility.initialY = uniform(0m,700m)

**.carA[*].mobility.initialMovementHeading = 0deg
**.carB[*].mobility.initialMovementHeading = 90deg
**.carC[*].mobility.initialMovementHeading = 0deg
**.carD[*].mobility.initialMovementHeading = 90deg

**.trLight*.mobility.typename = "StationaryMobility"
**.sumo*.mobility.typename = "StationaryMobility"
#------------------------------------#

############### CA configuration ################# 
*.carrierAggregation.numComponentCarriers = 1
*.carrierAggregation.componentCarrier[0].numerologyIndex = ${u=0}
*.carrierAggregation.componentCarrier[0].carrierFrequency = 2GHz
*.carrierAggregation.componentCarrier[0].numBands = ${numRbs=270} #50=10MHz - 100=20MHz - 270=50MHz

*.gnb*.cellularNic.numCarriers = 1
*.gnb*.cellularNic.channelModel[0].componentCarrierIndex = 0
*.car*[*].cellularNic.numCarriers = 1
*.car*[*].cellularNic.nrChannelModel[0].componentCarrierIndex = 0

**.trLight*.cellularNic.numCarriers = 1
**.trLight*.cellularNic.nrChannelModel[0].componentCarrierIndex = 0
**.sumo*.cellularNic.numCarriers = 1                            
**.sumo*.cellularNic.nrChannelModel[0].componentCarrierIndex = 0

############### BS position #################
#*.gnb1.mobility.initialX = 250m
#*.gnb1.mobility.initialY = 500m
#*.gnb2.mobility.initialX = 750m
#*.gnb2.mobility.initialY = 500m

############### X2 configuration #################
*.gnb*.numX2Apps = 1                                        # one x2App per peering node
*.gnb*.x2App[*].server.localPort = 5000 + ancestorIndex(1)  # Server ports (x2App[0]=5000, x2App[1]=5001, ...)
*.gnb1.x2App[0].client.connectAddress = "gnb2%x2ppp0" 
*.gnb2.x2App[0].client.connectAddress = "gnb1%x2ppp0" 

############## UE configuration ##################
**.numCarA = ${numA=0,1,5}
**.numCarB = ${numB=${numA}}
**.numCarC = ${numC=${numA}}
**.numCarD = ${numD=${numA}}

# UEs associates to the best BS at the beginning of the simulation
*.car*[*].macCellId = 0
*.car*[*].masterId = 0
*.car*[*].nrMacCellId = 1
*.car*[*].nrMasterId = 1

**.trLight*.macCellId = 0  
**.trLight*.masterId = 0   
**.trLight*.nrMacCellId = 1
**.trLight*.nrMasterId = 1 

**.sumo*.macCellId = 0  
**.sumo*.masterId = 0   
**.sumo*.nrMacCellId = 1
**.sumo*.nrMasterId = 1 

**.dynamicCellAssociation = true
**.enableHandover = true





#------------------------------------#
# Config CBR-DL
#
# Configuration with CBR DL traffic from a remote server to the UEs
# 
[Config traffic-light-data]
description = "Hexa-X demo5 scenario 1"

# one UDP application for each user
**.car*[*].numApps = 1
**.sumo*.numApps = 2
**.trLight*.numApps = 2


# the amount of UDP applications on server should be equal to the total number of cars, plus 4 AI agents 
*.server_A.numApps = ${numA}
*.server_B.numApps = ${numB} 
*.server_C.numApps = ${numC} 
*.server_D.numApps = ${numD}
*.server.numApps  = 8 


#========= Sumo Application Setup ============= SUMO->AI
*.server.app[0..3].typename = "CbrReceiver"
*.server.app[0..3].localPort = 3000 + ancestorIndex(0)

**.sumo*.app[0].typename = "CbrSender"
**.sumo*.app[0].randPacketSize = true
**.sumo*.app[0].minPsize = 52
**.sumo*.app[0].maxPsize = 1450

**.sumo*.app[0].randInterpacketTime = true
**.sumoA.app[0].minIPT = 11.03ms
**.sumoA.app[0].maxIPT = 15.67ms
**.sumoB.app[0].minIPT = 13.50ms
**.sumoB.app[0].maxIPT = 18.18ms
**.sumoC.app[0].minIPT = 12.47ms
**.sumoC.app[0].maxIPT = 17.73ms
**.sumoD.app[0].minIPT = 11.29ms
**.sumoD.app[0].maxIPT = 15.77ms


**.sumo*.app[0].destAddress = "server"
**.sumo*.app[0].startTime = uniform(0s,0.1s)
**.sumo*.app[0].finishTime = uniform(49s,49.1s)
**.sumo*.app[0].localPort = 3000
**.sumo1.app[0].destPort = 3000
**.sumo2.app[0].destPort = 3001
**.sumo3.app[0].destPort = 3002
**.sumo4.app[0].destPort = 3003 
#------------------------------------#


#============ AI Application Setup ============= AI -> trLight
**.trLight*.app[1].typename = "CbrReceiver"
**.trLight*.app[1].localPort = 4000

**.server.app[4..7].typename = "CbrSender"

**.server.app[4..7].randPacketSize = true
**.server.app[4..7].minPsize = 52
**.server.app[4..7].maxPsize = 364
**.server.app[4..7].randInterpacketTime = true
**.server.app[4..7].minIPT = 7.95ms
**.server.app[4..7].maxIPT = 24.27ms

**.server.app[4..7].startTime = uniform(0s,0.1s)
**.server.app[4..7].finishTime = uniform(49s,49.1s)

**.server.app[4].destAddress = "trLight1"
**.server.app[5].destAddress = "trLight2"
**.server.app[6].destAddress = "trLight3"
**.server.app[7].destAddress = "trLight4"

**.server.app[4..7].destPort = 4000 
**.server.app[4..7].localPort = 4000+ancestorIndex(0)
#------------------------------------#


#======= TrLight Application Setup ============= TrLight-> Sumo
**.sumo*.app[1].typename = "CbrReceiver"
**.sumo*.app[1].localPort = 5000

**.trLight*.app[0].typename = "CbrSender"
**.trLight*.app[0].randPacketSize = true
**.trLightA.app[0].minPsize = 52
**.trLightA.app[0].maxPsize = 282
**.trLightB.app[0].minPsize = 52
**.trLightB.app[0].maxPsize = 260
**.trLightC.app[0].minPsize = 52
**.trLightC.app[0].maxPsize = 254
**.trLightD.app[0].minPsize = 52
**.trLightD.app[0].maxPsize = 261

**.trLight*.app[0].randInterpacketTime = true
**.trLightA.app[0].minIPT = 33.11ms
**.trLightA.app[0].maxIPT = 1000ms
**.trLightB.app[0].minIPT = 34.60ms
**.trLightB.app[0].maxIPT = 1000ms
**.trLightC.app[0].minIPT = 34.36ms
**.trLightC.app[0].maxIPT = 1000ms
**.trLightD.app[0].minIPT = 34.13ms
**.trLightD.app[0].maxIPT = 1000ms


**.trLight*.app[0].startTime = uniform(0s,0.1s)
**.trLight*.app[0].finishTime = uniform(49s,49.1s)

**.trLight1.app[0].destAddress = "sumo1"
**.trLight2.app[0].destAddress = "sumo2"
**.trLight3.app[0].destAddress = "sumo3"
**.trLight4.app[0].destAddress = "sumo4"

**.trLight*.app[0].destPort = 5000 
**.trLight*.app[0].localPort = 5000
#------------------------------------#


[Config videoDl]
extends = traffic-light-data
#========= Car Application Setup =============
# each car receives video-streaming-like traffic
**.car*[*].app[*].typename = "CbrReceiver"
**.car*[*].app[*].localPort = 3000

*.server_*.app[*].typename = "CbrSender"
**.server_*.app[*].randPacketSize = true
**.server_*.app[*].minPsize = 11296
**.server_*.app[*].maxPsize = 12703

*.server_*.app[*].sampling_time = 0.04s
*.server_*.app[*].destPort = 3000 
*.server_*.app[*].localPort = 3088+ancestorIndex(0) 
*.server_*.app[*].startTime = uniform(0s,0.1s)
*.server_*.app[*].finishTime = uniform(49s,49.1s)

*.server_A.app[*].destAddress = "carA[" + string(ancestorIndex(0)) + "]"
*.server_B.app[*].destAddress = "carB[" + string(ancestorIndex(0)) + "]"
*.server_C.app[*].destAddress = "carC[" + string(ancestorIndex(0)) + "]"
*.server_D.app[*].destAddress = "carD[" + string(ancestorIndex(0)) + "]"
#------------------------------------#


[Config videoUl]
extends = traffic-light-data
#========= Car Application Setup =============
# each car receives video-streaming-like traffic
*.server_*.app[*].typename = "CbrReceiver"
*.server_*.app[*].localPort = 3000+ancestorIndex(0)

**.car*[*].app[*].typename = "CbrSender"
**.car*[*].app[*].randPacketSize = true
**.car*[*].app[*].minPsize = 11296
**.car*[*].app[*].maxPsize = 12703

**.car*[*].app[*].sampling_time = 0.04s
**.car*[*].app[*].destPort = 3000+ancestorIndex(1) 
**.car*[*].app[*].localPort = 3088+ancestorIndex(0) 
**.car*[*].app[*].startTime = uniform(0s,0.1s)
**.car*[*].app[*].finishTime = uniform(49s,49.1s)

*.carA[*].app[*].destAddress = "server_A"
*.carB[*].app[*].destAddress = "server_B"
*.carC[*].app[*].destAddress = "server_C"
*.carD[*].app[*].destAddress = "server_D"
#------------------------------------#

